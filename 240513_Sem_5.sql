-- 5. Seminar, 13.05.2024

-- 1.1
create table etyp (
id int primary key generated by default as identity not null,
typ varchar unique not null
)

select * from etyp

--1.2
insert into etyp (typ) values ('Museum')

insert into etyp (typ) values ('Galerie')

insert into etyp (typ) values ('Bank')

insert into etyp (typ) values ('Arztpraxis')


--1.3
alter table e add eid int

select * from e

--1.4
-- vergibt museums-ID von e nach eid
update e set eid = (
select id from etyp where typ = 'Museum' ) -- welche id hat "Museum"?
where typ = 'M'

update e set eid = (
select id from etyp where typ = 'Galerie' ) -- welche id hat "Galerie"?
where typ = 'G'

--1.5
alter table e alter column eid set not null

alter table e add constraint fk foreign key (eid)
references etyp (id)

alter table e drop column typ

select * from e

--1.6
insert into e (bezeichnung, sitz, eid) values ('Deutsche Bank', 'Leipzig', (select id from etyp where typ='Bank'))


--1.7
update b set enr = (select id from e
where Bezeichnung = 'Deutsche Bank' and Sitz = 'Leipzig')
where Jahr >= 1919

SELECT enr, b.id, Titel, Jahr, Wert,e.Bezeichnung, Sitz
FROM B LEFT JOIN e ON b.enr=e.id
ORDER BY Jahr;


--2.1
CREATE TABLE AH(
id INT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY NOT NULL,
Name varchar NOT NULL,
Sitz varchar NOT NULL,
CONSTRAINT AK_ns UNIQUE (Name, Sitz)
)

--2.2
-- Apostroph in der Zeichenkette muss doppelt geschrieben werden
INSERT INTO AH (Name, Sitz)
VALUES ('Sotheby''s', 'London');
INSERT INTO AH (Name, Sitz)
VALUES ('Sotheby''s', 'New York');

--2.3
drop table a

CREATE TABLE A(
id INT PRIMARY KEY GENERATED ALWAYS AS identity not null,
datum timestamp NOT NULL,
aid INT NOT NULL REFERENCES AH(id),
CONSTRAINT uniqA UNIQUE(datum, aid)
)

--2.4
INSERT INTO A(datum,aid)
VALUES (
'2019-05-08T12:00:00',
(SELECT id FROM AH
WHERE Name='Sotheby''s'
AND Sitz='London')
);

INSERT INTO A(datum,aid)
VALUES ('2019-05-09T12:00:00',
(SELECT id FROM AH
WHERE Name='Sotheby''s'
AND Sitz='London'))

select * from a

--2.5
CREATE TABLE O(
id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
Name VARCHAR NOT NULL,
CONSTRAINT uniqO UNIQUE (Name)
)

--2.6
insert into o (name) values ('Meier')

select * from o

--2.7
CREATE TABLE T (
id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY NOT NULL,
aid INT NOT NULL REFERENCES a(id),
bid INT NOT NULL REFERENCES b(id),
Preis INT NOT NULL CHECK (Preis>0),
BesitzerNeu INT NOT NULL REFERENCES o(id),
CONSTRAINT uniqT UNIQUE (aid,bid)
);

INSERT INTO T (aid, Preis, bid, BesitzerNeu)
VALUES (
(Select id FROM A
WHERE datum='2019-05-08T12:00:00'
AND aid=(
SELECT id
FROM ah
WHERE Name='Sotheby''s'
AND Sitz='London'
)),
100000,
(SELECT id FROM b WHERE Titel = 'Peng!'),
(SELECT id FROM o WHERE name='MÃ¼ller')
);
INSERT INTO T (aid, Preis, bid, BesitzerNeu)
VALUES (
(SELECT id
FROM A
WHERE datum='2019-05-09T12:00:00'
AND aid=(
SELECT id
FROM ah
WHERE Name='Sotheby''s'
AND Sitz='London'
)
),
120000,
(SELECT id FROM b WHERE Titel = 'Peng!'),
(SELECT id FROM o WHERE name = 'Meier')
)


