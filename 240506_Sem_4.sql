--4. Seminar, 06.05.2024

--1.


create table k(
id int primary key generated always as identity,
name varchar not null,
geburt int check(geburt > 0),
geburtsort varchar,
tod int,
constraint eindeutiger_kuenstler unique(name, geburt, geburtsort),
constraint geb_tod_check check(geburt < tod)
)

select * from k

INSERT INTO k (Name, Geburt, Geburtsort, Tod)
SELECT *
FROM dblink('host = fing-prodlog1 dbname = kunst_db user = lgehlauf
password = 1234', 'SELECT Name, Geburt, Geb_ort, Tod FROM k')
AS kunst(name varchar, Geburt int, Ort varchar, tod int)

select * from k

--2.

--id vorgeben klappt nicht
INSERT INTO k (id, name, geburt, geburtsort, tod)
VALUES ('1', 'Mona Lisa', '99', 'Weiß nicht', 100)

--tod = NULL ist anscheinend > geburt
INSERT INTO k (name, geburt, geburtsort)
VALUES ('Mona Lisa', '45', 'Weiß nicht')

select * from k

delete from k where name = 'Mona Lisa'

--3.

create table e(
id int primary key generated by default as identity,
bezeichnung varchar not null,
sitz varchar NOT NULL,
typ varchar,
constraint asdfasdf unique (bezeichnung, sitz)
)

INSERT INTO e (bezeichnung, sitz, typ)
((SELECT *
FROM dblink('host = fing-prodlog1 dbname = kunst_db user = lgehlauf
password = 1234', 'select bezeichnung, sitz, ''G'' as typ from g')
AS ee(bezeichnung varchar, sitz varchar, typ varchar))
union
(SELECT *
FROM dblink('host = fing-prodlog1 dbname = kunst_db user = lgehlauf
password = 1234', 'select bezeichnung, sitz, ''M'' as typ from m')
AS eee(bezeichnung varchar, sitz varchar, typ varchar))
)

select * from e

create table b (
id int primary key generated by default as identity,
Titel varchar not null,
Jahr int,
Wert int constraint wert_check check ( Wert>0 ),
knr int constraint hfsd references k(id),
enr int constraint gh references e(id),
constraint AK_b unique (Titel, knr)
)

select * from b

drop table k

INSERT INTO b (Titel, Jahr, Wert, knr, enr)
SELECT Titel, Jahr, Wert,
(SELECT id
FROM dblink('host = fing-prodlog1 dbname = kunst_db user =
lgehlauf password = 1234', 'SELECT * FROM k')
AS k1(knr varchar, name varchar, geburt int, geb_ort varchar, tod int)
LEFT JOIN k ON k.Name=k1.Name
WHERE knr=b2.knr),
(SELECT id
FROM
(SELECT *
FROM dblink('host = fing-prodlog1 dbname = kunst_db user =
lgehlauf password = 1234', 'SELECT * FROM g')
AS g(enr varchar, Bezeichnung varchar, Sitz varchar)
UNION
SELECT *
FROM dblink('host = fing-prodlog1 dbname = kunst_db user =
lgehlauf password = 1234', 'SELECT * FROM m')
AS m(enr varchar, Bezeichnung varchar, Sitz varchar)
) AS e2
LEFT JOIN e ON e.Bezeichnung=e2.Bezeichnung
WHERE enr=b2.enr)
FROM dblink('host = fing-prodlog1 dbname = kunst_db user = lgehlauf
password = 1234', 'SELECT * FROM b')
AS b2(bnr varchar, titel varchar, jahr int, wert int, knr varchar, enr varchar);


--4.

ALTER TABLE b
DROP CONSTRAINT FK_knr_kId;
ALTER TABLE b
ADD CONSTRAINT FK_knr_kId
FOREIGN KEY (knr) REFERENCES k(id)
ON DELETE CASCADE;

